package main.java.controller;

import javafx.fxml.FXML;
import javafx.geometry.Pos;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.layout.HBox;
import javafx.scene.layout.VBox;
import javafx.scene.Node;
import javafx.scene.Scene;
import javafx.stage.Stage;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;

import java.io.IOException;
import java.util.*;

public class NorthernPokerController {

@FXML private VBox topPlayerBox, leftPlayerBox, rightPlayerBox, bottomPlayerBox;
@FXML private VBox centerPane;  //  kiểu VBox đúng với FXML
@FXML private Button startGameButton, playAgainButton, quitButton;

private final List<ImageView> topCards = new ArrayList<>();
private final List<ImageView> leftCards = new ArrayList<>();
private final List<ImageView> rightCards = new ArrayList<>();
private final List<ImageView> bottomCards = new ArrayList<>();

private final Map<Integer, VBox> seatMap = new HashMap<>();

private String playerName1, playerName2, playerName3, playerName4;

@FXML
public void initialize() {
seatMap.put(0, bottomPlayerBox);
seatMap.put(1, leftPlayerBox);
seatMap.put(2, topPlayerBox);
seatMap.put(3, rightPlayerBox);
}

public void setPlayerName1(String name) { playerName1 = name; }
public void setPlayerName2(String name) { playerName2 = name; }
public void setPlayerName3(String name) { playerName3 = name; }
public void setPlayerName4(String name) { playerName4 = name; }

public void placePlayer(int seatIndex, String playerName) {
Image avatar = new Image(getClass().getResourceAsStream("/image/player/playerimage.png"));
ImageView imageView = new ImageView(avatar);
imageView.setFitHeight(60);
imageView.setFitWidth(60);

Label label = new Label(playerName);
VBox avatarBox = new VBox(imageView, label);
avatarBox.setAlignment(Pos.CENTER);
avatarBox.setSpacing(5);

VBox seat = seatMap.get(seatIndex);
seat.getChildren().clear();
seat.getChildren().add(avatarBox);
}

@FXML
public void startGameButtonClick() {
startGameButton.setVisible(false);
dealCardsToPlayers();
}

@FXML
public void playAgainButtonClick() {
dealCardsToPlayers();
}

@FXML
public void quitButtonClick() {
try {
FXMLLoader loader = new FXMLLoader(getClass().getResource("/main/resources/fxml/Menu.fxml"));
Parent root = loader.load();
Stage stage = (Stage) quitButton.getScene().getWindow();
stage.setScene(new Scene(root));
} catch (IOException e) {
e.printStackTrace();
}
}

private void dealCardsToPlayers() {
List<String> deck = generateCardDeck();
Collections.shuffle(deck);

setCardsTo(seatMap.get(0), bottomCards, deck.subList(0, 3));
setCardsTo(seatMap.get(1), leftCards, deck.subList(3, 6));
setCardsTo(seatMap.get(2), topCards, deck.subList(6, 9));
setCardsTo(seatMap.get(3), rightCards, deck.subList(9, 12));
}

private void setCardsTo(VBox seatBox, List<ImageView> cardViews, List<String> cardCodes) {
HBox cards = new HBox(10);
cardViews.clear();
for (String code : cardCodes) {
ImageView img = new ImageView(loadCardImage(code));
img.setFitWidth(60);
img.setFitHeight(90);
cards.getChildren().add(img);
cardViews.add(img);
}

Label nameLabel = null;
for (Node node : seatBox.getChildren()) {
if (node instanceof Label) {
nameLabel = (Label) node;
break;
} else if (node instanceof VBox vbox) {
for (Node child : vbox.getChildren()) {
if (child instanceof Label lbl) {
nameLabel = lbl;
break;
}
}
}
}

seatBox.getChildren().clear();
seatBox.getChildren().add(cards);
if (nameLabel != null) seatBox.getChildren().add(nameLabel);
}

private List<String> generateCardDeck() {
String[] suits = {"C", "D", "H", "S"};
List<String> cards = new ArrayList<>();
for (String suit : suits) {
for (int i = 1; i <= 10; i++) {
cards.add(suit + i);
}
}
return cards;
}

private Image loadCardImage(String cardCode) {
String suitFolder = switch (cardCode.charAt(0)) {
case 'C' -> "clubs";
case 'D' -> "diamonds";
case 'H' -> "hearts";
case 'S' -> "spades";
default -> throw new IllegalArgumentException("Invalid suit: " + cardCode);
};
String fileName = cardCode + ".png";
String path = "/image/card/" + suitFolder + "/" + fileName;
var stream = getClass().getResourceAsStream(path);
if (stream == null) {
System.err.println("Không tìm thấy ảnh: " + path);
return null;
}
return new Image(stream);
}
}